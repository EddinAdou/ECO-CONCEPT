name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests and Build
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: eco-concept_test
          MYSQL_USER: root
          MYSQL_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        command: >
          bash -c "
          if [ ! -d /var/lib/mysql/mysql ]; then
            echo 'Initializing database';
            mysqld --initialize-insecure;
            mysqld --skip-networking &
            pid=\$!;
            mysql=( mysql --protocol=socket -uroot );
            for i in {30..0}; do
              if echo 'SELECT 1' | \"\${mysql[@]}\" &> /dev/null; then
                break;
              fi;
              echo 'MySQL init process in progress...';
              sleep 1;
            done;
            if [ \$i = 0 ]; then
              echo >&2 'MySQL init process failed.';
              exit 1;
            fi;
            echo 'CREATE DATABASE IF NOT EXISTS \`eco-concept_test\` ;' | \"\${mysql[@]}\";
            echo 'CREATE USER IF NOT EXISTS '\''root'\''@'\''%'\'' IDENTIFIED BY '\''root'\'' ;' | \"\${mysql[@]}\";
            echo 'GRANT ALL ON \`eco-concept_test\`.* TO '\''root'\''@'\''%'\'' ;' | \"\${mysql[@]}\";
            echo 'FLUSH PRIVILEGES ;' | \"\${mysql[@]}\";
            kill \$pid;
            wait \$pid;
          fi;
          exec mysqld;
          "

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm install

      - name: Run React Tests
        working-directory: frontend
        run: npm test -- --coverage

      - name: Build React App
        working-directory: frontend
        run: npm run build

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_mysql
          coverage: xdebug

      - name: Install Composer Dependencies
        working-directory: backend
        run: composer install --no-interaction --prefer-dist

      - name: Set Environment Variables for Symfony Tests
        run: |
          echo "APP_ENV=test" >> $GITHUB_ENV
          echo "DATABASE_URL=mysql://root:root@127.0.0.1:3306/eco-concept_test?serverVersion=10.11.2-MariaDB&charset=utf8mb4" >> $GITHUB_ENV

      - name: Run Symfony Migrations
        working-directory: backend
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/eco-concept_test?serverVersion=10.11.2-MariaDB&charset=utf8mb4
        run: php bin/console doctrine:migrations:migrate --env=test --no-interaction

      - name: Run PHPUnit Tests
        working-directory: backend
        run: ./vendor/bin/phpunit --coverage-text